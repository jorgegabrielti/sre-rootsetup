#!/bin/bash 
#
# ##########################################################################
# +----------------------------------------------------------------------+ #
# |                 Backup Shell                                         | #
# +----------------------------------------------------------------------+ #
# |                                                                      | #
# | Name          : main.sh                                              | #
# | Function      : startup sre tools install                            | #
# | Version       : 1.0                                                  | #
# | Author        : Jorge Gabriel (SRE)                                  | #
# | Email         : jorgegabriel.ti@gmail.com                            | #
# +----------------------------------------------------------------------+ #
# ##########################################################################
#
# Description:
#
# Algortimo do script :
#  Install SRE tools for start work.
#


set -e

### Alias eXpands
shopt -s expand_aliases

### Workdir
WORK_DIR="${PWD}"

### Import functions
for FUNCTION in $(grep -F 'Test: [OK]' -l -r ${WORK_DIR}/src/function/); do
    sed -i 's/\r$//' ${FUNCTION}
    source ${FUNCTION}
done

### System configurations
distro_detect && \
  update_system

### Packages installations
packages_install

### Python install
python_install

## TODO: user firebug para sites cujo o download 
## de artefatos não seja tão simples. Usar curl em seguida.
#

#### Containers tools
## Docker
#curl -fsSL https://get.docker.com -o get-docker.sh
#sudo sh get-docker.sh
#
## Kubernetes
## kind
#
## Install and configure kubectl
#curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
#curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
#
#echo "$(<kubectl.sha256) kubectl" | sha256sum --check
#sudo install \
#  -o root \
#  -g root \
#  -m 0755 \
#  kubectl /usr/local/bin/kubectl
#
#kubectl version --client
#
## Configure bash_completion
#sudo apt-get install -y \
#  bash-completion
#source /usr/share/bash-completion/bash_completion
#bash && type _init_completion
#echo 'source <(kubectl completion bash)' >>~/.bashrc
#echo 'alias k=kubectl' >>~/.bashrc
#echo 'complete -F __start_kubectl k' >>~/.bashrc
#
#
## Lens
#https://api.k8slens.dev/binaries/Lens-5.4.1-latest.20220304.1.amd64.deb
#
#
## istio
#curl -L https://istio.io/downloadIstio | sh -
#cd istio-*
#
#istioctl install \ 
#  --set profile=default -y \
#  --set meshConfig.accessLogFile=/dev/stdout
#
#### IaC Tools
## Ansible
#sudo apt install -y \
#  software-properties-common
#
#sudo add-apt-repository --yes \
#  --update ppa:ansible/ansible
#
#sudo apt install -y \
#  ansible
#
#ansible --version
#
## Vagrant
#curl -fsSL https://apt.releases.hashicorp.com/gpg \
#  | sudo apt-key add -
#sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
#sudo apt-get update \
#  && sudo apt-get install vagrant
#
## Terraform
#curl -fsSL https://apt.releases.hashicorp.com/gpg \
#  | sudo apt-key add -
#sudo apt-add-repository \
#  "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
#sudo apt-get update -y \
#  && sudo apt-get install -y \
#  terraform
#
#terraform -v
#
#### Cloud Tools 
## aws-cli
#curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" \ 
#  -o "awscliv2.zip"
#unzip awscliv2.zip
#sudo ./aws/install
#
## gcloud
#echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" \
#  | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
#sudo apt-get install apt-transport-https ca-certificates gnupg
#curl https://packages.cloud.google.com/apt/doc/apt-key.gpg \
#  | sudo apt-key \
#    --keyring /usr/share/keyrings/cloud.google.gpg add -
#sudo apt-get update && sudo apt-get install google-cloud-sdk